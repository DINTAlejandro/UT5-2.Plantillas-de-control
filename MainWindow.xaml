<Window x:Class="UT5_1.Plantillas_de_datos.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UT5_1.Plantillas_de_datos"
        xmlns:convertidores="clr-namespace:UT5_1.Plantillas_de_datos.Converters"
        mc:Ignorable="d"
        Title="Comida" MinHeight="450" MinWidth="550" Width="800" Height="600" Background="CadetBlue" Icon="Assets/fruit_food_apple.ico">
    <Window.Resources>
        <convertidores:GlutenConverter x:Key="conversorGluten"></convertidores:GlutenConverter>
        <convertidores:TipoConverter x:Key="conversorTipo"></convertidores:TipoConverter>
        <convertidores:SulfitosConverter x:Key="conversorSulfitos"></convertidores:SulfitosConverter>
        <convertidores:SojaConverter x:Key="conversorSoja"></convertidores:SojaConverter>
        <convertidores:LecheConverter x:Key="conversorLeche"></convertidores:LecheConverter>
        <ControlTemplate x:Key="NewButtonTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#EE5F40"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#E0320D"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid" Margin="1">
                        <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="#1990ED" Margin="1" Opacity="0" Stretch="None"/>
                        <Rectangle x:Name="indeterminateMark" Fill="#1990ED" Margin="2" Opacity="0"/>
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#1990ED"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#1990ED"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#C7C7C7"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#ACAAAA"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#1990ED"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#1990ED"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#1990ED"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#1990ED"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#1990ED"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="NewGroupBox" TargetType="{x:Type GroupBox}">
            <Grid SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="6"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="6"/>
                </Grid.RowDefinitions>

                <Border BorderBrush="Black"  BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="0" Grid.Row="1" Grid.RowSpan="3">
                    <Border.OpacityMask>
                        <MultiBinding ConverterParameter="7" UpdateSourceTrigger="Default">
                            <MultiBinding.Converter>
                                <BorderGapMaskConverter/>
                            </MultiBinding.Converter>
                            <Binding ElementName="Header" Path="ActualWidth"/>
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding>
                    </Border.OpacityMask>

                </Border>
                <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ContentPresenter Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </ControlTemplate>
        <Style TargetType="StackPanel" x:Key="objNull">
            <Style.Triggers >
                <DataTrigger Binding="{Binding Path=PlatoActual}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Image" x:Key="toolTip">
            <Style.Triggers >
                <DataTrigger Binding="{Binding Path=Tipo}" Value="Americana">
                    <Setter Property="ToolTip" Value="Comida americana"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="China">
                    <Setter Property="ToolTip" Value="Comida china"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="Mexicana">
                    <Setter Property="ToolTip" Value="Comida mexicana"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock" x:Key="fuente">
            <Style.Triggers >
                <DataTrigger Binding="{Binding Path=Tipo}" Value="Americana">
                    <Setter Property="FontFamily" Value="Slim Summer"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="China">
                    <Setter Property="FontFamily" Value="Chinese Wok Food St"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="Mexicana">
                    <Setter Property="FontFamily" Value="Taco Salad"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Template" Value="{StaticResource CheckBoxTemplate}"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Template" Value="{StaticResource TextBoxTemplate}"></Setter>
        </Style>
        <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">
            <Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ScrollViewer Margin="4" x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect ShadowDepth="0"></DropShadowEffect>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <DataTemplate  x:Key="plato">
            <Border BorderBrush="Black" BorderThickness="2">
                <Grid Width="200" Height="200">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"></RowDefinition>
                        <RowDefinition Height="8*"></RowDefinition>
                        <RowDefinition Height="2*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Viewbox Grid.Row="0">
                        <TextBlock x:Name="tituloCard" Text="{Binding Path=Nombre}" Style="{StaticResource fuente}"></TextBlock>
                    </Viewbox>
                    <Image Stretch="UniformToFill" Grid.Row="1" Name="imageCard" Source="{Binding Path=Imagen}"></Image>
                    <DockPanel Margin="5" Grid.Row="2" LastChildFill="False">
                        <Image DockPanel.Dock="Left" x:Name="iconoPaisCard" Source="{Binding Converter={StaticResource conversorTipo}, Path=Tipo}" Style="{StaticResource toolTip}"></Image>
                        <StackPanel DockPanel.Dock="Right" x:Name="listaIconosAlergenosCard" Orientation="Horizontal">
                            <Image Source="{Binding Converter={StaticResource conversorLeche}, Path=Leche}"></Image>
                            <Image Source="{Binding Converter={StaticResource conversorSulfitos}, Path=Sulfitos}"></Image>
                            <Image Source="{Binding Converter={StaticResource conversorGluten}, Path=Gluten}"></Image>
                            <Image Source="{Binding Converter={StaticResource conversorSoja}, Path=Soja}"></Image>
                        </StackPanel>
                    </DockPanel>
                </Grid>
            </Border>
        </DataTemplate>
        


    </Window.Resources>

    <DockPanel Margin="10" Background="White">
        <StackPanel  Style="{StaticResource objNull}" x:Name="sp_opciones" Margin="10" Width="200" DockPanel.Dock="Right" Background="LightGray">
            <TextBlock Margin="10,5">Nombre del título</TextBlock>
            <TextBox Margin="10,5" Text="{Binding PlatoActual.Nombre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Template="{DynamicResource TextBoxTemplate}">
                
            </TextBox>
            <TextBlock Margin="10,5">Foto del plato</TextBlock>
            <TextBox Margin="10,5" Text="{Binding PlatoActual.Imagen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            <TextBlock Margin="10,5">Tipo de comida</TextBlock>
            <ComboBox Margin="10,5" SelectedItem="{Binding PlatoActual.Tipo}" ItemsSource="{Binding TipoPlatos}">

            </ComboBox>
            <GroupBox Header="Alérgenos" Margin="10,5" Template="{DynamicResource NewGroupBox}">
                <StackPanel Orientation="Horizontal" Margin="10,5">
                    <StackPanel Orientation="Vertical">
                        <CheckBox Margin="5" IsChecked="{Binding PlatoActual.Leche, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">Leche</CheckBox>
                        <CheckBox Margin="5" IsChecked="{Binding PlatoActual.Soja, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">Soja</CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Vertical">
                        <CheckBox Margin="5" IsChecked="{Binding PlatoActual.Gluten, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">Gluten</CheckBox>
                        <CheckBox Margin="5" IsChecked="{Binding PlatoActual.Sulfitos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">Sulfitos</CheckBox>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <Button x:Name="button_limpiarSeleccion" HorizontalAlignment="Left" Width="100" Height="20" Margin="10,5" Click="button_limpiarSeleccion_Click">Limpiar selección</Button>
        </StackPanel>
        <ListBox MinWidth="200"  SelectedItem="{Binding Path=PlatoActual}"  Margin="10" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible"  ItemTemplate="{StaticResource plato}" ItemsSource="{Binding Path=Platos}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel>

                    </WrapPanel>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
    </DockPanel>
</Window>
